Global data structures:
-- in map for every coarse region:
---- associate list expectant_triangles of triangles waiting on it

Triangle data structure:
- add field region_expected with region id waiting to be finalized

Vertex data structure:
- add field triangle_count to express number of triangles containing it

Streaming triangulation:

A. Coarse triangulation
- reconstruct from file

B. Fine points

Initial step:
- Read at least 3 points to construct fine triangle

Iteration:

-- If read fine point:
---- Use Bowyer-Watson to determine where it belongs
---- Create point and new triangle in the fine triangulation (via edge-flips)
---- Suppose new triangle is ABC and new point is C
     increment count of triangles for points A and B
     set count of triangles for point C to 1

-- If read finalization tag
---- For all expectant_triangles for this region id
------ Perform FinalizeTriangle
---- For each fine triangle (obviously, not dead)
------ If circumcenter of triangle is in diamond of this region
-------- Locate co-defining region of diamond
-------- Add triangle to expectant_triangles of co-defining region
-------- Set region_expected for triangle to region id of co-defining region


Function FinalizeTriangle:
-- For each vertex of triangle
---- Decrement triangle_count for vertex
---- If triangle_count for vertex is 0
------ Deallocate vertex
---- For each neighboring triangle
------ Mark to-be-finalized triangle with special pointer value
---- Deallocate triangle (it becomes dead)
